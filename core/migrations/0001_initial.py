# Generated by Django 2.1.15 on 2020-09-17 21:41

from django.db import migrations, models
import django.db.models.deletion
import mptt.fields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('amrs', '0003_auto_20200917_2141'),
    ]

    operations = [
        migrations.CreateModel(
            name='DMABaseinfo',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('dma_no', models.CharField(max_length=50, unique=True, verbose_name='分区编号')),
                ('dma_name', models.CharField(max_length=50, unique=True, verbose_name='分区名称')),
                ('pepoles_num', models.CharField(blank=True, max_length=50, null=True, verbose_name='服务人口')),
                ('acreage', models.CharField(blank=True, max_length=50, null=True, verbose_name='服务面积')),
                ('user_num', models.CharField(blank=True, max_length=50, null=True, verbose_name='用户数量')),
                ('pipe_texture', models.CharField(blank=True, max_length=50, null=True, verbose_name='管道材质')),
                ('pipe_length', models.CharField(blank=True, max_length=50, null=True, verbose_name='管道总长度(m)')),
                ('pipe_links', models.CharField(blank=True, max_length=50, null=True, verbose_name='管道连接总数(个)')),
                ('pipe_years', models.CharField(blank=True, max_length=50, null=True, verbose_name='管道最长服务年限(年)')),
                ('pipe_private', models.CharField(blank=True, max_length=50, null=True, verbose_name='私人拥有水管长度(m)')),
                ('ifc', models.CharField(blank=True, max_length=250, null=True, verbose_name='IFC参数')),
                ('aznp', models.CharField(blank=True, max_length=250, null=True, verbose_name='AZNP')),
                ('night_use', models.CharField(blank=True, max_length=50, null=True, verbose_name='正常夜间用水量')),
                ('cxc_value', models.CharField(blank=True, max_length=50, null=True, verbose_name='产销差目标值')),
                ('creator', models.CharField(blank=True, max_length=50, null=True, verbose_name='负责人')),
                ('create_date', models.CharField(blank=True, max_length=30, null=True, verbose_name='建立日期')),
            ],
            options={
                'db_table': 'bsc_dmabaseinfo',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='DmaGisinfo',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('dma_no', models.CharField(max_length=50, unique=True, verbose_name='分区编号')),
                ('geodata', models.TextField(blank=True, null=True)),
                ('strokeColor', models.CharField(blank=True, max_length=100, null=True)),
                ('fillColor', models.CharField(blank=True, max_length=100, null=True)),
            ],
            options={
                'db_table': 'bsc_dmagisinfo',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='DmaStation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('station_id', models.CharField(max_length=30)),
                ('meter_type', models.CharField(max_length=30)),
                ('station_type', models.CharField(max_length=30)),
                ('dmaid', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='core.DMABaseinfo')),
            ],
            options={
                'db_table': 'bsc_dmastation',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Meter',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('serialnumber', models.CharField(blank=True, db_column='SerialNumber', max_length=30, null=True)),
                ('version', models.CharField(blank=True, db_column='version', max_length=30, null=True)),
                ('dn', models.CharField(blank=True, db_column='Dn', max_length=30, null=True)),
                ('metertype', models.CharField(blank=True, db_column='MeterType', max_length=30, null=True)),
                ('mtype', models.CharField(blank=True, db_column='Type', max_length=30, null=True)),
                ('manufacturer', models.CharField(blank=True, db_column='Manufacturer', max_length=30, null=True)),
                ('protocol', models.CharField(blank=True, db_column='Protocol', max_length=64, null=True)),
                ('R', models.CharField(blank=True, db_column='R', max_length=64, null=True)),
                ('q4', models.CharField(blank=True, db_column='Q4', max_length=64, null=True)),
                ('q3', models.CharField(blank=True, db_column='Q3', max_length=64, null=True)),
                ('q2', models.CharField(blank=True, db_column='Q2', max_length=64, null=True)),
                ('q1', models.CharField(blank=True, db_column='Q1', max_length=64, null=True)),
                ('check_cycle', models.CharField(blank=True, db_column='check cycle', max_length=64, null=True)),
                ('state', models.CharField(blank=True, db_column='state', max_length=64, null=True)),
            ],
            options={
                'db_table': 'bsc_meter',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Organization',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=300, null=True, verbose_name='组织机构名称')),
                ('attribute', models.CharField(blank=True, max_length=300, null=True, verbose_name='组织机构性质')),
                ('register_date', models.CharField(blank=True, max_length=30, null=True, verbose_name='注册日期')),
                ('owner_name', models.CharField(blank=True, max_length=300, null=True, verbose_name='负责人')),
                ('phone_number', models.CharField(blank=True, max_length=300, null=True, verbose_name='电话号码')),
                ('firm_address', models.CharField(blank=True, max_length=300, null=True, verbose_name='地址')),
                ('organlevel', models.CharField(blank=True, max_length=30, null=True, verbose_name='Level')),
                ('coorType', models.CharField(blank=True, max_length=30, null=True)),
                ('longitude', models.CharField(blank=True, max_length=30, null=True)),
                ('latitude', models.CharField(blank=True, max_length=30, null=True)),
                ('zoomIn', models.CharField(blank=True, max_length=30, null=True)),
                ('islocation', models.CharField(blank=True, max_length=30, null=True)),
                ('location', models.CharField(blank=True, max_length=30, null=True)),
                ('province', models.CharField(blank=True, max_length=30, null=True)),
                ('city', models.CharField(blank=True, max_length=30, null=True)),
                ('district', models.CharField(blank=True, max_length=30, null=True)),
                ('cid', models.CharField(blank=True, max_length=300, null=True)),
                ('pId', models.CharField(blank=True, max_length=300, null=True)),
                ('is_org', models.BooleanField(blank=True, max_length=300)),
                ('uuid', models.CharField(blank=True, max_length=300, null=True)),
                ('adcode', models.CharField(blank=True, max_length=300, null=True)),
                ('districtlevel', models.CharField(blank=True, max_length=300, null=True)),
                ('lft', models.PositiveIntegerField(editable=False)),
                ('rght', models.PositiveIntegerField(editable=False)),
                ('tree_id', models.PositiveIntegerField(db_index=True, editable=False)),
                ('level', models.PositiveIntegerField(editable=False)),
                ('parent', mptt.fields.TreeForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='children', to='core.Organization')),
            ],
            options={
                'db_table': 'bsc_organization',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Personalized',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ptype', models.CharField(max_length=10)),
                ('loginLogo', models.CharField(blank=True, max_length=256, null=True)),
                ('webIco', models.CharField(blank=True, max_length=256, null=True)),
                ('homeLogo', models.CharField(blank=True, max_length=256, null=True)),
                ('topTitle', models.CharField(blank=True, max_length=256, null=True)),
                ('copyright', models.CharField(blank=True, max_length=256, null=True)),
                ('websiteName', models.CharField(blank=True, max_length=256, null=True)),
                ('recordNumber', models.CharField(blank=True, max_length=256, null=True)),
                ('frontPageMsg', models.CharField(blank=True, max_length=256, null=True)),
                ('frontPageMsgUrl', models.CharField(blank=True, max_length=256, null=True)),
                ('updateDataUsername', models.CharField(blank=True, max_length=256, null=True)),
                ('updateDataTime', models.DateTimeField(auto_now=True, db_column='updateDataTime')),
                ('belongto', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='core.Organization')),
            ],
            options={
                'db_table': 'bsc_personalized',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='SimCard',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('simcardNumber', models.CharField(blank=True, db_column='SIMID', max_length=30, null=True)),
                ('isStart', models.CharField(blank=True, db_column='state', max_length=64, null=True)),
                ('iccid', models.CharField(blank=True, db_column='ICCID', max_length=30, null=True)),
                ('imei', models.CharField(blank=True, db_column='IMEI', max_length=30, null=True)),
                ('imsi', models.CharField(blank=True, db_column='IMSI', max_length=30, null=True)),
                ('operator', models.CharField(blank=True, db_column='operator', max_length=30, null=True)),
                ('simFlow', models.CharField(blank=True, db_column='simFlow', max_length=30, null=True)),
                ('openCardTime', models.CharField(blank=True, db_column='openCardTime', max_length=64, null=True)),
                ('endTime', models.CharField(blank=True, db_column='endTime', max_length=64, null=True)),
                ('create_date', models.DateTimeField(auto_now_add=True, db_column='create_date')),
                ('update_date', models.DateTimeField(auto_now=True, db_column='update_date')),
                ('remark', models.CharField(blank=True, db_column='remark', max_length=64, null=True)),
                ('belongto', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.Organization')),
            ],
            options={
                'db_table': 'bsc_simcard',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Station',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.CharField(blank=True, db_column='Description', max_length=30, null=True)),
                ('biguser', models.CharField(blank=True, db_column='biguser', max_length=30, null=True)),
                ('focus', models.CharField(blank=True, db_column='focus', max_length=30, null=True)),
                ('dmametertype', models.CharField(blank=True, db_column='dmaMeterType', max_length=30, null=True)),
                ('image1', models.ImageField(blank=True, upload_to='stations')),
                ('image2', models.ImageField(blank=True, upload_to='stations')),
                ('image3', models.ImageField(blank=True, upload_to='stations')),
                ('image4', models.ImageField(blank=True, upload_to='stations')),
                ('image5', models.ImageField(blank=True, upload_to='stations')),
                ('amrs_bigmeter', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='amrs.Bigmeter')),
                ('belongto', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.Organization')),
                ('dmaid', models.ManyToManyField(to='core.DMABaseinfo')),
                ('meter', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='core.Meter')),
            ],
            options={
                'db_table': 'bsc_bigmeter',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='VCommunity',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('amrs_community', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='amrs.Community')),
                ('belongto', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.Organization')),
            ],
            options={
                'db_table': 'bsc_community',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='VConcentrator',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('updated', models.DateTimeField(auto_now=True)),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('amrs_concentrator', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='amrs.Concentrator')),
                ('belongto', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.Organization')),
            ],
            options={
                'db_table': 'bsc_concentrator',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='VPressure',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('protocol', models.CharField(blank=True, db_column='Protocol', max_length=64, null=True)),
                ('check_cycle', models.CharField(blank=True, db_column='check cycle', max_length=64, null=True)),
                ('state', models.CharField(blank=True, db_column='state', max_length=64, null=True)),
                ('version', models.CharField(blank=True, db_column='version', max_length=30, null=True)),
                ('amrs_pressure', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='amrs.Bigmeter')),
                ('belongto', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.Organization')),
            ],
            options={
                'db_table': 'bsc_pressure',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='VSecondWater',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('serialnumber', models.CharField(blank=True, db_column='SerialNumber', max_length=30, null=True)),
                ('version', models.CharField(blank=True, db_column='version', max_length=30, null=True)),
                ('manufacturer', models.CharField(blank=True, db_column='Manufacturer', max_length=30, null=True)),
                ('product_date', models.CharField(blank=True, db_column='product date', max_length=64, null=True)),
                ('artist', models.CharField(blank=True, db_column='artist', max_length=64, null=True)),
                ('artistPreview', models.CharField(blank=True, db_column='artistPreview', max_length=256, null=True)),
                ('amrs_secondwater', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='amrs.SecondWater')),
                ('belongto', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.Organization')),
            ],
            options={
                'db_table': 'bsc_secondwater',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='VWatermeter',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('useraddr', models.CharField(blank=True, db_column='UserAddr', max_length=255, null=True)),
                ('descriptions', models.CharField(blank=True, db_column='descriptions', max_length=1000, null=True)),
                ('amrs_watermeter', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='amrs.Watermeter')),
                ('belongto', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.Organization')),
                ('communityid', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='watermeter', to='core.VCommunity')),
            ],
            options={
                'db_table': 'bsc_watermeter',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='WaterUserType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('usertype', models.CharField(max_length=256)),
                ('explains', models.CharField(blank=True, max_length=1000, null=True)),
            ],
            options={
                'db_table': 'waterusertype',
                'managed': True,
            },
        ),
        migrations.AddField(
            model_name='vcommunity',
            name='vconcentrators',
            field=models.ManyToManyField(to='core.VConcentrator'),
        ),
        migrations.AddField(
            model_name='meter',
            name='belongto',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.Organization'),
        ),
        migrations.AddField(
            model_name='meter',
            name='simid',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='meter', to='core.SimCard'),
        ),
        migrations.AddField(
            model_name='dmabaseinfo',
            name='belongto',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='dma', to='core.Organization'),
        ),
        migrations.AlterUniqueTogether(
            name='dmabaseinfo',
            unique_together={('dma_no',)},
        ),
    ]
