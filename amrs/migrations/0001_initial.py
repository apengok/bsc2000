# Generated by Django 2.2.5 on 2020-02-26 17:56

from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Alarm',
            fields=[
                ('id', models.AutoField(db_column='Id', primary_key=True, serialize=False)),
                ('alarmtime', models.CharField(blank=True, db_column='AlarmTime', max_length=30, null=True)),
                ('alarmevent', models.IntegerField(blank=True, db_column='AlarmEvent', null=True)),
                ('alarmtype', models.IntegerField(blank=True, db_column='AlarmType', null=True)),
                ('alarmlevel', models.IntegerField(blank=True, db_column='AlarmLevel', null=True)),
                ('alarmcontent', models.CharField(blank=True, db_column='AlarmContent', max_length=128, null=True)),
                ('alarmstate', models.IntegerField(blank=True, db_column='AlarmState', null=True)),
                ('dealtime', models.CharField(blank=True, db_column='DealTime', max_length=30, null=True)),
                ('dealcontent', models.CharField(blank=True, db_column='DealContent', max_length=128, null=True)),
                ('dealjob', models.CharField(blank=True, db_column='DealJob', max_length=30, null=True)),
                ('alarmobj', models.IntegerField(blank=True, db_column='AlarmObj', null=True)),
                ('communityid', models.CharField(blank=True, db_column='CommunityId', max_length=30, null=True)),
                ('waterid', models.CharField(blank=True, db_column='WaterId', max_length=30, null=True)),
                ('commaddr', models.CharField(blank=True, db_column='CommAddr', max_length=30, null=True)),
            ],
            options={
                'db_table': 'alarm',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='AlarmProcess',
            fields=[
                ('id', models.AutoField(db_column='Id', primary_key=True, serialize=False)),
                ('alarmstate', models.IntegerField(blank=True, db_column='AlarmState', null=True)),
                ('dealtime', models.CharField(blank=True, db_column='DealTime', max_length=30, null=True)),
                ('dealcontent', models.CharField(blank=True, db_column='DealContent', max_length=128, null=True)),
                ('dealjob', models.CharField(blank=True, db_column='DealJob', max_length=30, null=True)),
                ('alarmid', models.IntegerField(blank=True, db_column='AlarmId', null=True)),
            ],
            options={
                'db_table': 'alarm_process',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Amrsparam',
            fields=[
                ('paramkey', models.CharField(db_column='paramKey', max_length=64, primary_key=True, serialize=False)),
                ('paramvalue', models.CharField(db_column='paramValue', max_length=128)),
            ],
            options={
                'db_table': 'amrsparam',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Bigmeter',
            fields=[
                ('username', models.CharField(blank=True, db_column='UserName', max_length=30, null=True)),
                ('usertype', models.CharField(blank=True, db_column='UserType', max_length=128, null=True)),
                ('userid', models.CharField(blank=True, db_column='UserId', max_length=128, null=True)),
                ('installationsite', models.CharField(blank=True, db_column='InstallationSite', max_length=128, null=True)),
                ('metertype', models.CharField(blank=True, db_column='MeterType', max_length=30, null=True)),
                ('manufacturer', models.CharField(blank=True, db_column='Manufacturer', max_length=30, null=True)),
                ('model', models.CharField(blank=True, db_column='Model', max_length=30, null=True)),
                ('dn', models.CharField(blank=True, db_column='Dn', max_length=30, null=True)),
                ('material', models.CharField(blank=True, db_column='Material', max_length=30, null=True)),
                ('serialnumber', models.CharField(blank=True, db_column='SerialNumber', max_length=30, null=True)),
                ('madedate', models.CharField(blank=True, db_column='MadeDate', max_length=30, null=True)),
                ('lng', models.CharField(blank=True, db_column='Lng', max_length=30, null=True)),
                ('lat', models.CharField(blank=True, db_column='Lat', max_length=30, null=True)),
                ('coortype', models.CharField(blank=True, db_column='CoorType', max_length=30, null=True)),
                ('commaddr', models.CharField(db_column='CommAddr', max_length=30, primary_key=True, serialize=False)),
                ('simid', models.CharField(blank=True, db_column='SIMID', max_length=30, null=True)),
                ('districtid', models.IntegerField(blank=True, db_column='DistrictId', null=True)),
                ('field_metabinding', models.CharField(blank=True, db_column='\r\nMetaBinding', max_length=20, null=True)),
                ('gpflow', models.CharField(blank=True, db_column='GPFlow', max_length=64, null=True)),
                ('uplimitflow', models.CharField(blank=True, db_column='UpLimitFlow', max_length=64, null=True)),
                ('monthupflow', models.CharField(blank=True, db_column='MonthUpFlow', max_length=64, null=True)),
                ('monthdownflow', models.CharField(blank=True, db_column='MonthDownFlow', max_length=64, null=True)),
                ('commstate', models.IntegerField(blank=True, db_column='CommState', null=True)),
                ('meterstate', models.CharField(blank=True, db_column='MeterState', max_length=30, null=True)),
                ('gprsv', models.CharField(blank=True, db_column='GprsV', max_length=30, null=True)),
                ('meterv', models.CharField(blank=True, db_column='MeterV', max_length=30, null=True)),
                ('downlimitv', models.CharField(blank=True, db_column='DownLimitV', max_length=30, null=True)),
                ('t', models.CharField(blank=True, db_column='T', max_length=30, null=True)),
                ('hearttime', models.CharField(blank=True, db_column='HeartTime', max_length=30, null=True)),
                ('signlen', models.CharField(blank=True, db_column='SignLen', max_length=30, null=True)),
                ('lastonlinetime', models.CharField(blank=True, db_column='LastOnLineTime', max_length=30, null=True)),
                ('createdate', models.CharField(blank=True, db_column='CreateDate', max_length=30, null=True)),
                ('alarmoffline', models.IntegerField(blank=True, db_column='AlarmOffLine', null=True)),
                ('alarmonline', models.IntegerField(blank=True, db_column='AlarmOnLine', null=True)),
                ('alarmgprsvlow', models.IntegerField(blank=True, db_column='AlarmGprsVLow', null=True)),
                ('alarmmetervlow', models.IntegerField(blank=True, db_column='AlarmMeterVLow', null=True)),
                ('alarmuplimitflow', models.IntegerField(blank=True, db_column='AlarmUpLimitFlow', null=True)),
                ('alarmgpflow', models.IntegerField(blank=True, db_column='AlarmGPFlow', null=True)),
                ('pressure', models.CharField(blank=True, db_column='Pressure', max_length=64, null=True)),
                ('plustotalflux', models.CharField(blank=True, db_column='PlusTotalFlux', max_length=64, null=True)),
                ('reversetotalflux', models.CharField(blank=True, db_column='ReverseTotalFlux', max_length=64, null=True)),
                ('flux', models.CharField(blank=True, db_column='Flux', max_length=64, null=True)),
                ('totalflux', models.CharField(blank=True, db_column='TotalFlux', max_length=64, null=True)),
                ('pressurereadtime', models.CharField(blank=True, db_column='PressureReadTime', max_length=30, null=True)),
                ('fluxreadtime', models.CharField(blank=True, db_column='FluxReadTime', max_length=30, null=True)),
                ('pressurealarm', models.IntegerField(blank=True, db_column='PressureAlarm', null=True)),
                ('pressureup', models.CharField(blank=True, db_column='PressureUp', max_length=64, null=True)),
                ('pressuredown', models.CharField(blank=True, db_column='PressureDown', max_length=64, null=True)),
                ('dosagealarm', models.IntegerField(blank=True, db_column='DosageAlarm', null=True)),
                ('dosageup', models.CharField(blank=True, db_column='DosageUp', max_length=64, null=True)),
                ('dosagedown', models.CharField(blank=True, db_column='DosageDown', max_length=64, null=True)),
                ('pickperiod', models.CharField(blank=True, db_column='PickPeriod', max_length=64, null=True)),
                ('reportperiod', models.CharField(blank=True, db_column='ReportPeriod', max_length=64, null=True)),
            ],
            options={
                'db_table': 'bigmeter',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='BindBigmeter',
            fields=[
                ('id', models.AutoField(db_column='Id', primary_key=True, serialize=False)),
                ('groupid', models.IntegerField(blank=True, db_column='GroupId', null=True)),
                ('commaddr', models.CharField(blank=True, db_column='CommAddr', max_length=30, null=True)),
            ],
            options={
                'db_table': 'bind_bigmeter',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='BindCommunity',
            fields=[
                ('id', models.AutoField(db_column='Id', primary_key=True, serialize=False)),
                ('groupid', models.IntegerField(blank=True, db_column='GroupId', null=True)),
                ('communityid', models.CharField(blank=True, db_column='CommunityId', max_length=30, null=True)),
            ],
            options={
                'db_table': 'bind_community',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='BindGroupRole',
            fields=[
                ('id', models.AutoField(db_column='Id', primary_key=True, serialize=False)),
                ('groupid', models.IntegerField(blank=True, db_column='GroupId', null=True)),
                ('grouprolekey', models.CharField(blank=True, db_column='GroupRoleKey', max_length=64, null=True)),
            ],
            options={
                'db_table': 'bind_group_role',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='BindMenuGroupRole',
            fields=[
                ('id', models.AutoField(db_column='Id', primary_key=True, serialize=False)),
                ('usermenuid', models.IntegerField(blank=True, db_column='UserMenuId', null=True)),
                ('grouprolekey', models.CharField(blank=True, db_column='GroupRoleKey', max_length=64, null=True)),
            ],
            options={
                'db_table': 'bind_menu_group_role',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='BindMenuUserRole',
            fields=[
                ('id', models.AutoField(db_column='Id', primary_key=True, serialize=False)),
                ('usermenuid', models.IntegerField(blank=True, db_column='UserMenuId', null=True)),
                ('userrolekey', models.CharField(blank=True, db_column='UserRoleKey', max_length=64, null=True)),
            ],
            options={
                'db_table': 'bind_menu_user_role',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='BindUserGroup',
            fields=[
                ('id', models.AutoField(db_column='Id', primary_key=True, serialize=False)),
                ('groupid', models.IntegerField(blank=True, db_column='GroupId', null=True)),
                ('userid', models.IntegerField(blank=True, db_column='UserId', null=True)),
            ],
            options={
                'db_table': 'bind_user_group',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='BindUserRole',
            fields=[
                ('id', models.AutoField(db_column='Id', primary_key=True, serialize=False)),
                ('userid', models.IntegerField(blank=True, db_column='UserId', null=True)),
                ('userrolekey', models.CharField(blank=True, db_column='UserRoleKey', max_length=64, null=True)),
            ],
            options={
                'db_table': 'bind_user_role',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Changewatermeter',
            fields=[
                ('id', models.AutoField(db_column='Id', primary_key=True, serialize=False)),
                ('changedt', models.CharField(blank=True, db_column='ChangeDt', max_length=30, null=True)),
                ('oldmetervalue', models.CharField(blank=True, db_column='OldMeterValue', max_length=128, null=True)),
                ('newmetervalue', models.CharField(blank=True, db_column='NewMeterValue', max_length=128, null=True)),
                ('oldnodeaddr', models.CharField(blank=True, db_column='OldNodeAddr', max_length=30, null=True)),
                ('oldwateraddr', models.CharField(blank=True, db_column='OldWaterAddr', max_length=30, null=True)),
                ('newnodeaddr', models.CharField(blank=True, db_column='NewNodeAddr', max_length=30, null=True)),
                ('newwateraddr', models.CharField(blank=True, db_column='NewWaterAddr', max_length=30, null=True)),
                ('job', models.CharField(blank=True, db_column='Job', max_length=30, null=True)),
                ('waterid', models.IntegerField(blank=True, db_column='WaterId', null=True)),
            ],
            options={
                'db_table': 'changewatermeter',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Community',
            fields=[
                ('id', models.AutoField(db_column='Id', primary_key=True, serialize=False)),
                ('name', models.CharField(blank=True, db_column='Name', max_length=64, null=True)),
                ('address', models.CharField(blank=True, db_column='Address', max_length=128, null=True)),
                ('metabinding', models.CharField(blank=True, db_column='MetaBinding', max_length=20, null=True)),
                ('districtid', models.IntegerField(blank=True, db_column='DistrictId', null=True)),
            ],
            options={
                'db_table': 'community',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Concentrator',
            fields=[
                ('name', models.CharField(blank=True, db_column='Name', max_length=64, null=True)),
                ('installationsite', models.CharField(blank=True, db_column='InstallationSite', max_length=128, null=True)),
                ('manufacturer', models.CharField(blank=True, db_column='Manufacturer', max_length=64, null=True)),
                ('model', models.CharField(blank=True, db_column='Model', max_length=64, null=True)),
                ('serialnumber', models.CharField(blank=True, db_column='SerialNumber', max_length=30, null=True)),
                ('madedate', models.CharField(blank=True, db_column='MadeDate', max_length=30, null=True)),
                ('lng', models.CharField(blank=True, db_column='Lng', max_length=30, null=True)),
                ('lat', models.CharField(blank=True, db_column='Lat', max_length=30, null=True)),
                ('coortype', models.CharField(blank=True, db_column='CoorType', max_length=30, null=True)),
                ('commaddr', models.CharField(db_column='CommAddr', max_length=30, primary_key=True, serialize=False)),
                ('simid', models.CharField(blank=True, db_column='SIMID', max_length=30, null=True)),
                ('gpflow', models.CharField(blank=True, db_column='GPFlow', max_length=64, null=True)),
                ('uplimitflow', models.CharField(blank=True, db_column='UpLimitFlow', max_length=64, null=True)),
                ('monthupflow', models.CharField(blank=True, db_column='MonthUpFlow', max_length=64, null=True)),
                ('monthdownflow', models.CharField(blank=True, db_column='MonthDownFlow', max_length=64, null=True)),
                ('commstate', models.IntegerField(blank=True, db_column='CommState', null=True)),
                ('gprsv', models.CharField(blank=True, db_column='GprsV', max_length=30, null=True)),
                ('downlimitv', models.CharField(blank=True, db_column='DownLimitV', max_length=30, null=True)),
                ('t', models.CharField(blank=True, db_column='T', max_length=30, null=True)),
                ('hearttime', models.CharField(blank=True, db_column='HeartTime', max_length=30, null=True)),
                ('signlen', models.CharField(blank=True, db_column='SignLen', max_length=30, null=True)),
                ('lastonlinetime', models.CharField(blank=True, db_column='LastOnLineTime', max_length=30, null=True)),
                ('createdate', models.CharField(blank=True, db_column='CreateDate', max_length=30, null=True)),
                ('communityid', models.IntegerField(blank=True, db_column='CommunityId', null=True)),
                ('alarmoffline', models.IntegerField(blank=True, db_column='AlarmOffLine', null=True)),
                ('alarmonline', models.IntegerField(blank=True, db_column='AlarmOnLine', null=True)),
                ('alarmgprsvlow', models.IntegerField(blank=True, db_column='AlarmGprsVLow', null=True)),
                ('alarmuplimitflow', models.IntegerField(blank=True, db_column='AlarmUpLimitFlow', null=True)),
                ('alarmgpflow', models.IntegerField(blank=True, db_column='AlarmGPFlow', null=True)),
                ('address', models.CharField(blank=True, db_column='Address', max_length=255, null=True)),
                ('readtime', models.CharField(blank=True, db_column='readtime', max_length=30, null=True)),
                ('readperiod', models.CharField(blank=True, db_column='readperiod', max_length=10, null=True)),
                ('readip', models.CharField(blank=True, db_column='readip', max_length=20, null=True)),
                ('readport', models.CharField(blank=True, db_column='readport', max_length=10, null=True)),
                ('replystatus', models.CharField(blank=True, db_column='replystatus', max_length=128, null=True)),
            ],
            options={
                'db_table': 'concentrator',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='District',
            fields=[
                ('id', models.AutoField(db_column='Id', primary_key=True, serialize=False)),
                ('name', models.CharField(blank=True, db_column='Name', max_length=64, null=True)),
                ('description', models.CharField(blank=True, db_column='Description', max_length=128, null=True)),
                ('parentid', models.IntegerField(blank=True, db_column='ParentId', null=True)),
            ],
            options={
                'db_table': 'district',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='FireHydrant',
            fields=[
                ('id', models.AutoField(db_column='Id', primary_key=True, serialize=False)),
                ('name', models.CharField(blank=True, db_column='Name', max_length=64, null=True)),
                ('address', models.CharField(blank=True, db_column='Address', max_length=128, null=True)),
                ('metabinding', models.CharField(blank=True, db_column='MetaBinding', max_length=20, null=True)),
                ('lng', models.CharField(blank=True, db_column='Lng', max_length=30, null=True)),
                ('lat', models.CharField(blank=True, db_column='Lat', max_length=30, null=True)),
                ('coortype', models.CharField(blank=True, db_column='CoorType', max_length=30, null=True)),
            ],
            options={
                'db_table': 'fire_hydrant',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='HdbCommunityRdc',
            fields=[
                ('hdate', models.CharField(db_column='HDate', max_length=30, primary_key=True, serialize=False)),
                ('community', models.CharField(db_column='Community', max_length=30)),
                ('totalnum', models.CharField(blank=True, db_column='TotalNum', max_length=30, null=True)),
                ('normalnum', models.CharField(blank=True, db_column='NormalNum', max_length=30, null=True)),
                ('nodefaultnum', models.CharField(blank=True, db_column='NodeFaultNum', max_length=30, null=True)),
                ('waterfaultnum', models.CharField(blank=True, db_column='WaterFaultNum', max_length=30, null=True)),
                ('abnormalnum', models.CharField(blank=True, db_column='AbnormalNum', max_length=30, null=True)),
                ('readdatacount', models.CharField(blank=True, db_column='ReadDataCount', max_length=30, null=True)),
                ('sortidx', models.IntegerField(blank=True, db_column='SortIdx', null=True)),
            ],
            options={
                'db_table': 'hdb_community_rdc',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='HdbFlowData',
            fields=[
                ('id', models.AutoField(db_column='Id', primary_key=True, serialize=False)),
                ('commaddr', models.CharField(blank=True, db_column='CommAddr', max_length=30, null=True)),
                ('readtime', models.CharField(blank=True, db_column='ReadTime', max_length=30, null=True)),
                ('meterstate', models.CharField(blank=True, db_column='MeterState', max_length=30, null=True)),
                ('flux', models.CharField(blank=True, db_column='Flux', max_length=64, null=True)),
                ('plustotalflux', models.CharField(blank=True, db_column='PlusTotalFlux', max_length=64, null=True)),
                ('reversetotalflux', models.CharField(blank=True, db_column='ReverseTotalFlux', max_length=64, null=True)),
                ('totalflux', models.CharField(blank=True, db_column='TotalFlux', max_length=64, null=True)),
                ('gprsv', models.CharField(blank=True, db_column='GprsV', max_length=64, null=True)),
                ('meterv', models.CharField(blank=True, db_column='MeterV', max_length=64, null=True)),
            ],
            options={
                'db_table': 'hdb_flow_data',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='HdbFlowDataDay',
            fields=[
                ('id', models.AutoField(db_column='Id', primary_key=True, serialize=False)),
                ('commaddr', models.CharField(blank=True, db_column='CommAddr', max_length=30, null=True)),
                ('hdate', models.CharField(blank=True, db_column='HDate', max_length=30, null=True)),
                ('dosage', models.CharField(blank=True, db_column='Dosage', max_length=64, null=True)),
            ],
            options={
                'db_table': 'hdb_flow_data_day',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='HdbFlowDataHour',
            fields=[
                ('id', models.AutoField(db_column='Id', primary_key=True, serialize=False)),
                ('commaddr', models.CharField(blank=True, db_column='CommAddr', max_length=30, null=True)),
                ('hdate', models.CharField(blank=True, db_column='HDate', max_length=30, null=True)),
                ('dosage', models.CharField(blank=True, db_column='Dosage', max_length=64, null=True)),
            ],
            options={
                'db_table': 'hdb_flow_data_hour',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='HdbFlowDataMonth',
            fields=[
                ('id', models.AutoField(db_column='Id', primary_key=True, serialize=False)),
                ('commaddr', models.CharField(blank=True, db_column='CommAddr', max_length=30, null=True)),
                ('hdate', models.CharField(blank=True, db_column='HDate', max_length=30, null=True)),
                ('dosage', models.CharField(blank=True, db_column='Dosage', max_length=64, null=True)),
            ],
            options={
                'db_table': 'hdb_flow_data_month',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='HdbPressureData',
            fields=[
                ('id', models.AutoField(db_column='Id', primary_key=True, serialize=False)),
                ('commaddr', models.CharField(blank=True, db_column='CommAddr', max_length=30, null=True)),
                ('readtime', models.CharField(blank=True, db_column='ReadTime', max_length=30, null=True)),
                ('meterstate', models.CharField(blank=True, db_column='MeterState', max_length=30, null=True)),
                ('pressure', models.CharField(blank=True, db_column='Pressure', max_length=64, null=True)),
                ('gprsv', models.CharField(blank=True, db_column='GprsV', max_length=64, null=True)),
                ('meterv', models.CharField(blank=True, db_column='MeterV', max_length=64, null=True)),
            ],
            options={
                'db_table': 'hdb_pressure_data',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='HdbSimflow',
            fields=[
                ('id', models.AutoField(db_column='Id', primary_key=True, serialize=False)),
                ('commaddr', models.CharField(blank=True, db_column='CommAddr', max_length=30, null=True)),
                ('hdate', models.CharField(blank=True, db_column='HDate', max_length=30, null=True)),
                ('monthupflow', models.CharField(blank=True, db_column='MonthUpFlow', max_length=64, null=True)),
                ('monthdownflow', models.CharField(blank=True, db_column='MonthDownFlow', max_length=64, null=True)),
            ],
            options={
                'db_table': 'hdb_simflow',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='HdbWatermeterDay',
            fields=[
                ('waterid', models.IntegerField(db_column='WaterId', primary_key=True, serialize=False)),
                ('rvalue', models.CharField(blank=True, db_column='RValue', max_length=30, null=True)),
                ('fvalue', models.CharField(blank=True, db_column='FValue', max_length=30, null=True)),
                ('meterstate', models.CharField(blank=True, db_column='MeterState', max_length=30, null=True)),
                ('commstate', models.CharField(blank=True, db_column='CommState', max_length=30, null=True)),
                ('rtime', models.CharField(blank=True, db_column='RTime', max_length=30, null=True)),
                ('hdate', models.CharField(db_column='HDate', max_length=30)),
                ('dosage', models.CharField(blank=True, db_column='Dosage', max_length=30, null=True)),
                ('communityid', models.IntegerField(db_column='CommunityId')),
            ],
            options={
                'db_table': 'hdb_watermeter_day',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='HdbWatermeterMonth',
            fields=[
                ('waterid', models.IntegerField(db_column='WaterId', primary_key=True, serialize=False)),
                ('hdate', models.CharField(db_column='HDate', max_length=30)),
                ('dosage', models.CharField(blank=True, db_column='Dosage', max_length=30, null=True)),
                ('communityid', models.IntegerField(db_column='CommunityId')),
            ],
            options={
                'db_table': 'hdb_watermeter_month',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Imexport',
            fields=[
                ('id', models.AutoField(db_column='Id', primary_key=True, serialize=False)),
                ('name', models.CharField(blank=True, db_column='Name', max_length=64, null=True)),
                ('commtype', models.IntegerField(blank=True, db_column='CommType', null=True)),
                ('protocol', models.CharField(blank=True, db_column='Protocol', max_length=64, null=True)),
                ('driver', models.CharField(blank=True, db_column='Driver', max_length=30, null=True)),
                ('dbname', models.CharField(blank=True, db_column='DbName', max_length=30, null=True)),
                ('hostname', models.CharField(blank=True, db_column='Hostname', max_length=30, null=True)),
                ('username', models.CharField(blank=True, db_column='UserName', max_length=30, null=True)),
                ('password', models.CharField(blank=True, db_column='Password', max_length=30, null=True)),
                ('port', models.IntegerField(blank=True, db_column='Port', null=True)),
                ('opedate', models.IntegerField(blank=True, db_column='OpeDate', null=True)),
                ('opetime', models.CharField(blank=True, db_column='OpeTime', max_length=30, null=True)),
            ],
            options={
                'db_table': 'imexport',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Metercomm',
            fields=[
                ('id', models.AutoField(db_column='Id', primary_key=True, serialize=False)),
                ('name', models.CharField(blank=True, db_column='Name', max_length=64, null=True)),
                ('commtype', models.IntegerField(blank=True, db_column='CommType', null=True)),
                ('tcpport', models.CharField(blank=True, db_column='TcpPort', max_length=30, null=True)),
                ('commprotocol', models.CharField(blank=True, db_column='CommProtocol', max_length=64, null=True)),
            ],
            options={
                'db_table': 'metercomm',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='MeterParameter',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('commaddr', models.CharField(db_column='CommAddr', max_length=30, unique=True)),
                ('serialnumber', models.CharField(blank=True, db_column='Serialnumber', max_length=30, null=True)),
                ('tcpresendcount', models.CharField(blank=True, db_column='tcpresendcount', max_length=64, null=True)),
                ('tcpresponovertime', models.CharField(blank=True, db_column='tcpresponovertime', max_length=64, null=True)),
                ('udpresendcount', models.CharField(blank=True, db_column='udpresendcount', max_length=64, null=True)),
                ('udpresponovertime', models.CharField(blank=True, db_column='udpresponovertime', max_length=64, null=True)),
                ('smsresendcount', models.CharField(blank=True, db_column='smsresendcount', max_length=64, null=True)),
                ('smsresponovertime', models.CharField(blank=True, db_column='smsresponovertime', max_length=64, null=True)),
                ('heartbeatperiod', models.CharField(blank=True, db_column='heartbeatperiod', max_length=64, null=True)),
                ('ipaddr', models.CharField(blank=True, db_column='ipaddr', max_length=64, null=True)),
                ('port', models.CharField(blank=True, db_column='port', max_length=64, null=True)),
                ('entrypoint', models.CharField(blank=True, db_column='entrypoint', max_length=64, null=True)),
                ('updatastarttime', models.CharField(blank=True, db_column='updatastarttime', max_length=64, null=True)),
                ('updatamode', models.CharField(blank=True, db_column='updatamode', max_length=64, null=True)),
                ('collectperiod', models.CharField(blank=True, db_column='collectperiod', max_length=64, null=True)),
                ('updataperiod', models.CharField(blank=True, db_column='updataperiod', max_length=64, null=True)),
                ('updatatime1', models.CharField(blank=True, db_column='updatatime1', max_length=64, null=True)),
                ('updatatime2', models.CharField(blank=True, db_column='updatatime2', max_length=64, null=True)),
                ('updatatime3', models.CharField(blank=True, db_column='updatatime3', max_length=64, null=True)),
                ('updatatime4', models.CharField(blank=True, db_column='updatatime4', max_length=64, null=True)),
                ('dn', models.CharField(blank=True, db_column='dn', max_length=64, null=True)),
                ('liciperoid', models.CharField(blank=True, db_column='liciperoid', max_length=64, null=True)),
                ('maintaindate', models.CharField(blank=True, db_column='maintaindate', max_length=64, null=True)),
                ('transimeterfactor', models.CharField(blank=True, db_column='transimeterfactor', max_length=64, null=True)),
                ('biaofactor', models.CharField(blank=True, db_column='biaofactor', max_length=64, null=True)),
                ('manufacturercode', models.CharField(blank=True, db_column='manufacturercode', max_length=64, null=True)),
                ('isflowzerovalue', models.CharField(blank=True, db_column='isflowzerovalue', max_length=64, null=True)),
                ('flowzerovalue', models.CharField(blank=True, db_column='flowzerovalue', max_length=64, null=True)),
                ('issmallsignalcutpoint', models.CharField(blank=True, db_column='issmallsignalcutpoint', max_length=64, null=True)),
                ('smallsignalcutpoint', models.CharField(blank=True, db_column='smallsignalcutpoint', max_length=64, null=True)),
                ('pressurepermit', models.CharField(blank=True, db_column='pressurepermit', max_length=64, null=True)),
                ('flowdorient', models.CharField(blank=True, db_column='flowdorient', max_length=64, null=True)),
                ('plusaccumupreset', models.CharField(blank=True, db_column='plusaccumupreset', max_length=64, null=True)),
                ('flowmeasureunit', models.CharField(blank=True, db_column='flowmeasureunit', max_length=64, null=True)),
                ('sendparametertime', models.CharField(blank=True, db_column='sendparametertime', max_length=64, null=True)),
                ('readparametertime', models.CharField(blank=True, db_column='readparametertime', max_length=64, null=True)),
                ('commandstate', models.CharField(blank=True, db_column='commandstate', max_length=64, null=True)),
                ('commandtype', models.CharField(blank=True, db_column='commandtype', max_length=64, null=True)),
            ],
            options={
                'db_table': 'meterparameter',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Meterprotocol',
            fields=[
                ('id', models.AutoField(db_column='Id', primary_key=True, serialize=False)),
                ('name', models.CharField(blank=True, db_column='Name', max_length=64, null=True)),
                ('commtype', models.IntegerField(blank=True, db_column='CommType', null=True)),
                ('manufacturer', models.CharField(blank=True, db_column='Manufacturer', max_length=64, null=True)),
            ],
            options={
                'db_table': 'meterprotocol',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='PipeMapNode',
            fields=[
                ('id', models.AutoField(db_column='Id', primary_key=True, serialize=False)),
                ('name', models.CharField(blank=True, db_column='Name', max_length=64, null=True)),
                ('nodetype', models.IntegerField(blank=True, db_column='NodeType', null=True)),
                ('address', models.CharField(blank=True, db_column='Address', max_length=128, null=True)),
                ('lng', models.CharField(blank=True, db_column='Lng', max_length=30, null=True)),
                ('lat', models.CharField(blank=True, db_column='Lat', max_length=30, null=True)),
                ('coortype', models.CharField(blank=True, db_column='CoorType', max_length=30, null=True)),
                ('zoommin', models.IntegerField(blank=True, db_column='ZoomMin', null=True)),
                ('nodestate', models.CharField(blank=True, db_column='NodeState', max_length=64, null=True)),
                ('nodestatetype', models.IntegerField(blank=True, db_column='NodeStateType', null=True)),
                ('nodestateshow', models.IntegerField(blank=True, db_column='NodeStateShow', null=True)),
                ('prop1', models.CharField(blank=True, db_column='Prop1', max_length=64, null=True)),
                ('prop1type', models.IntegerField(blank=True, db_column='Prop1Type', null=True)),
                ('prop1show', models.IntegerField(blank=True, db_column='Prop1Show', null=True)),
                ('prop2', models.CharField(blank=True, db_column='Prop2', max_length=64, null=True)),
                ('prop2type', models.IntegerField(blank=True, db_column='Prop2Type', null=True)),
                ('prop2show', models.IntegerField(blank=True, db_column='Prop2Show', null=True)),
                ('prop3', models.CharField(blank=True, db_column='Prop3', max_length=64, null=True)),
                ('prop3type', models.IntegerField(blank=True, db_column='Prop3Type', null=True)),
                ('prop3show', models.IntegerField(blank=True, db_column='Prop3Show', null=True)),
                ('prop4', models.CharField(blank=True, db_column='Prop4', max_length=64, null=True)),
                ('prop4type', models.IntegerField(blank=True, db_column='Prop4Type', null=True)),
                ('prop4show', models.IntegerField(blank=True, db_column='Prop4Show', null=True)),
                ('prop5', models.CharField(blank=True, db_column='Prop5', max_length=64, null=True)),
                ('prop5type', models.IntegerField(blank=True, db_column='Prop5Type', null=True)),
                ('prop5show', models.IntegerField(blank=True, db_column='Prop5Show', null=True)),
                ('prop6', models.CharField(blank=True, db_column='Prop6', max_length=64, null=True)),
                ('prop6type', models.IntegerField(blank=True, db_column='Prop6Type', null=True)),
                ('prop6show', models.IntegerField(blank=True, db_column='Prop6Show', null=True)),
                ('prop7', models.CharField(blank=True, db_column='Prop7', max_length=64, null=True)),
                ('prop7type', models.IntegerField(blank=True, db_column='Prop7Type', null=True)),
                ('prop7show', models.IntegerField(blank=True, db_column='Prop7Show', null=True)),
                ('prop8', models.CharField(blank=True, db_column='Prop8', max_length=64, null=True)),
                ('prop8type', models.IntegerField(blank=True, db_column='Prop8Type', null=True)),
                ('prop8show', models.IntegerField(blank=True, db_column='Prop8Show', null=True)),
                ('prop9', models.CharField(blank=True, db_column='Prop9', max_length=64, null=True)),
                ('prop9type', models.IntegerField(blank=True, db_column='Prop9Type', null=True)),
                ('prop9show', models.IntegerField(blank=True, db_column='Prop9Show', null=True)),
                ('prop10', models.CharField(blank=True, db_column='Prop10', max_length=64, null=True)),
                ('prop10type', models.IntegerField(blank=True, db_column='Prop10Type', null=True)),
                ('prop10show', models.IntegerField(blank=True, db_column='Prop10Show', null=True)),
                ('visible', models.IntegerField(blank=True, db_column='Visible', null=True)),
            ],
            options={
                'db_table': 'pipe_map_node',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='PipeMapNodeType',
            fields=[
                ('id', models.AutoField(db_column='Id', primary_key=True, serialize=False)),
                ('nodetype', models.IntegerField(blank=True, db_column='NodeType', null=True)),
                ('prop1', models.CharField(blank=True, db_column='Prop1', max_length=64, null=True)),
                ('unit1', models.CharField(blank=True, db_column='Unit1', max_length=64, null=True)),
                ('prop2', models.CharField(blank=True, db_column='Prop2', max_length=64, null=True)),
                ('unit2', models.CharField(blank=True, db_column='Unit2', max_length=64, null=True)),
                ('prop3', models.CharField(blank=True, db_column='Prop3', max_length=64, null=True)),
                ('unit3', models.CharField(blank=True, db_column='Unit3', max_length=64, null=True)),
                ('prop4', models.CharField(blank=True, db_column='Prop4', max_length=64, null=True)),
                ('unit4', models.CharField(blank=True, db_column='Unit4', max_length=64, null=True)),
                ('prop5', models.CharField(blank=True, db_column='Prop5', max_length=64, null=True)),
                ('unit5', models.CharField(blank=True, db_column='Unit5', max_length=64, null=True)),
                ('prop6', models.CharField(blank=True, db_column='Prop6', max_length=64, null=True)),
                ('unit6', models.CharField(blank=True, db_column='Unit6', max_length=64, null=True)),
                ('prop7', models.CharField(blank=True, db_column='Prop7', max_length=64, null=True)),
                ('unit7', models.CharField(blank=True, db_column='Unit7', max_length=64, null=True)),
                ('prop8', models.CharField(blank=True, db_column='Prop8', max_length=64, null=True)),
                ('unit8', models.CharField(blank=True, db_column='Unit8', max_length=64, null=True)),
                ('prop9', models.CharField(blank=True, db_column='Prop9', max_length=64, null=True)),
                ('unit9', models.CharField(blank=True, db_column='Unit9', max_length=64, null=True)),
                ('prop10', models.CharField(blank=True, db_column='Prop10', max_length=64, null=True)),
                ('unit10', models.CharField(blank=True, db_column='Unit10', max_length=64, null=True)),
            ],
            options={
                'db_table': 'pipe_map_node_type',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='PipePressure',
            fields=[
                ('id', models.AutoField(db_column='Id', primary_key=True, serialize=False)),
                ('name', models.CharField(blank=True, db_column='Name', max_length=64, null=True)),
                ('address', models.CharField(blank=True, db_column='Address', max_length=128, null=True)),
                ('pressuretag', models.CharField(blank=True, db_column='PressureTag', max_length=64, null=True)),
                ('pressureup', models.CharField(blank=True, db_column='PressureUp', max_length=64, null=True)),
                ('pressuredown', models.CharField(blank=True, db_column='PressureDown', max_length=64, null=True)),
                ('isbigmeter', models.IntegerField(blank=True, db_column='IsBigMeter', null=True)),
                ('lng', models.CharField(blank=True, db_column='Lng', max_length=30, null=True)),
                ('lat', models.CharField(blank=True, db_column='Lat', max_length=30, null=True)),
                ('coortype', models.CharField(blank=True, db_column='CoorType', max_length=30, null=True)),
            ],
            options={
                'db_table': 'pipe_pressure',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='SecondDistrict',
            fields=[
                ('id', models.AutoField(db_column='Id', primary_key=True, serialize=False)),
                ('name', models.CharField(blank=True, db_column='Name', max_length=64, null=True)),
                ('description', models.CharField(blank=True, db_column='Description', max_length=128, null=True)),
                ('parentid', models.IntegerField(blank=True, db_column='ParentId', null=True)),
            ],
            options={
                'db_table': 'second_district',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='SecondWater',
            fields=[
                ('id', models.AutoField(db_column='Id', primary_key=True, serialize=False)),
                ('name', models.CharField(blank=True, db_column='Name', max_length=64, null=True)),
                ('address', models.CharField(blank=True, db_column='Address', max_length=128, null=True)),
                ('metabinding', models.CharField(blank=True, db_column='MetaBinding', max_length=20, null=True)),
                ('districtid', models.IntegerField(blank=True, db_column='DistrictId', null=True)),
                ('lng', models.CharField(blank=True, db_column='Lng', max_length=30, null=True)),
                ('lat', models.CharField(blank=True, db_column='Lat', max_length=30, null=True)),
                ('coortype', models.CharField(blank=True, db_column='CoorType', max_length=30, null=True)),
                ('waterinpresstag', models.CharField(blank=True, db_column='WaterInPressTag', max_length=64, null=True)),
                ('wateroutpresstag', models.CharField(blank=True, db_column='WaterOutPressTag', max_length=64, null=True)),
                ('watersetpresstag', models.CharField(blank=True, db_column='WaterSetPressTag', max_length=64, null=True)),
                ('freqtag', models.CharField(blank=True, db_column='FreqTag', max_length=64, null=True)),
                ('lowfreqtag', models.CharField(blank=True, db_column='LowFreqTag', max_length=64, null=True)),
                ('fluxtag', models.CharField(blank=True, db_column='FluxTag', max_length=64, null=True)),
                ('totalfluxtag', models.CharField(blank=True, db_column='TotalFluxTag', max_length=64, null=True)),
                ('chlorinetag', models.CharField(blank=True, db_column='ChlorineTag', max_length=64, null=True)),
                ('leveltag', models.CharField(blank=True, db_column='LevelTag', max_length=64, null=True)),
                ('phtag', models.CharField(blank=True, db_column='PhTag', max_length=64, null=True)),
                ('utag', models.CharField(blank=True, db_column='UTag', max_length=64, null=True)),
                ('i1tag', models.CharField(blank=True, db_column='I1Tag', max_length=64, null=True)),
                ('i2tag', models.CharField(blank=True, db_column='I2Tag', max_length=64, null=True)),
                ('i3tag', models.CharField(blank=True, db_column='I3Tag', max_length=64, null=True)),
                ('s1tag', models.CharField(blank=True, db_column='S1Tag', max_length=64, null=True)),
                ('s2tag', models.CharField(blank=True, db_column='S2Tag', max_length=64, null=True)),
                ('s3tag', models.CharField(blank=True, db_column='S3Tag', max_length=64, null=True)),
                ('commtag', models.CharField(blank=True, db_column='CommTag', max_length=64, null=True)),
            ],
            options={
                'db_table': 'second_water',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='StnAlarmBind',
            fields=[
                ('id', models.AutoField(db_column='Id', primary_key=True, serialize=False)),
                ('name', models.CharField(blank=True, db_column='Name', max_length=64, null=True)),
                ('bindtype', models.CharField(blank=True, db_column='BindType', max_length=32, null=True)),
            ],
            options={
                'db_table': 'stn_alarm_bind',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Syncscada',
            fields=[
                ('id', models.AutoField(db_column='Id', primary_key=True, serialize=False)),
                ('name', models.CharField(blank=True, db_column='Name', max_length=64, null=True)),
                ('commaddr', models.CharField(blank=True, db_column='CommAddr', max_length=30, null=True)),
                ('pressuretag', models.CharField(blank=True, db_column='PressureTag', max_length=64, null=True)),
                ('plustotalfluxtag', models.CharField(blank=True, db_column='PlusTotalFluxTag', max_length=64, null=True)),
                ('reversetotalfluxtag', models.CharField(blank=True, db_column='ReverseTotalFluxTag', max_length=64, null=True)),
                ('fluxtag', models.CharField(blank=True, db_column='FluxTag', max_length=64, null=True)),
                ('totalfluxtag', models.CharField(blank=True, db_column='TotalFluxTag', max_length=64, null=True)),
                ('commstatetag', models.CharField(blank=True, db_column='CommStateTag', max_length=64, null=True)),
                ('meterstatetag', models.CharField(blank=True, db_column='MeterStateTag', max_length=64, null=True)),
                ('gprsvtag', models.CharField(blank=True, db_column='GprsVTag', max_length=64, null=True)),
                ('metervtag', models.CharField(blank=True, db_column='MeterVTag', max_length=64, null=True)),
                ('pressurereadtimetag', models.CharField(blank=True, db_column='PressureReadTimeTag', max_length=64, null=True)),
                ('fluxreadtimetag', models.CharField(blank=True, db_column='FluxReadTimeTag', max_length=64, null=True)),
                ('ttag', models.CharField(blank=True, db_column='TTag', max_length=64, null=True)),
                ('syncdis', models.IntegerField(blank=True, db_column='SyncDis', null=True)),
                ('offset', models.IntegerField(blank=True, db_column='Offset', null=True)),
            ],
            options={
                'db_table': 'syncscada',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='SystemLog',
            fields=[
                ('id', models.AutoField(db_column='Id', primary_key=True, serialize=False)),
                ('logtime', models.CharField(blank=True, db_column='LogTime', max_length=30, null=True)),
                ('logtype', models.IntegerField(blank=True, db_column='LogType', null=True)),
                ('logcontent', models.CharField(blank=True, db_column='LogContent', max_length=128, null=True)),
                ('job', models.CharField(blank=True, db_column='Job', max_length=30, null=True)),
                ('logobj', models.IntegerField(blank=True, db_column='LogObj', null=True)),
                ('communityid', models.CharField(blank=True, db_column='CommunityId', max_length=30, null=True)),
                ('waterid', models.CharField(blank=True, db_column='WaterId', max_length=30, null=True)),
                ('commaddr', models.CharField(blank=True, db_column='CommAddr', max_length=30, null=True)),
            ],
            options={
                'db_table': 'system_log',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(db_column='Id', primary_key=True, serialize=False)),
                ('name', models.CharField(blank=True, db_column='Name', max_length=30, null=True)),
                ('password', models.CharField(blank=True, db_column='Password', max_length=30, null=True)),
                ('job', models.CharField(blank=True, db_column='Job', max_length=30, null=True)),
                ('email', models.CharField(blank=True, db_column='Email', max_length=64, null=True)),
                ('tel', models.CharField(blank=True, db_column='Tel', max_length=64, null=True)),
                ('sex', models.IntegerField(blank=True, db_column='Sex', null=True)),
                ('address', models.CharField(blank=True, db_column='Address', max_length=64, null=True)),
                ('description', models.CharField(blank=True, db_column='Description', max_length=64, null=True)),
                ('platformname', models.CharField(blank=True, db_column='PlatformName', max_length=64, null=True)),
                ('logintime', models.CharField(blank=True, db_column='LoginTime', max_length=30, null=True)),
                ('loginip', models.CharField(blank=True, db_column='LoginIp', max_length=30, null=True)),
            ],
            options={
                'db_table': 'user',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='UserGroup',
            fields=[
                ('id', models.AutoField(db_column='Id', primary_key=True, serialize=False)),
                ('name', models.CharField(blank=True, db_column='Name', max_length=30, null=True)),
                ('description', models.CharField(blank=True, db_column='Description', max_length=64, null=True)),
                ('platformname', models.CharField(blank=True, db_column='PlatformName', max_length=64, null=True)),
            ],
            options={
                'db_table': 'user_group',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='UserGroupRole',
            fields=[
                ('grouprolekey', models.CharField(db_column='GroupRoleKey', max_length=64, primary_key=True, serialize=False)),
                ('name', models.CharField(blank=True, db_column='Name', max_length=64, null=True)),
                ('description', models.CharField(blank=True, db_column='Description', max_length=64, null=True)),
            ],
            options={
                'db_table': 'user_group_role',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='UserMenu',
            fields=[
                ('id', models.AutoField(db_column='Id', primary_key=True, serialize=False)),
                ('title', models.CharField(blank=True, db_column='Title', max_length=32, null=True)),
                ('icon', models.CharField(blank=True, db_column='Icon', max_length=128, null=True)),
                ('url', models.CharField(blank=True, db_column='Url', max_length=128, null=True)),
                ('alarmapi', models.CharField(blank=True, db_column='AlarmApi', max_length=128, null=True)),
                ('alarmurl', models.CharField(blank=True, db_column='AlarmUrl', max_length=128, null=True)),
                ('sortmenuno', models.IntegerField(blank=True, db_column='SortMenuNo', null=True)),
                ('parentid', models.IntegerField(blank=True, db_column='ParentId', null=True)),
            ],
            options={
                'db_table': 'user_menu',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='UserRole',
            fields=[
                ('userrolekey', models.CharField(db_column='UserRoleKey', max_length=64, primary_key=True, serialize=False)),
                ('name', models.CharField(blank=True, db_column='Name', max_length=64, null=True)),
                ('description', models.CharField(blank=True, db_column='Description', max_length=64, null=True)),
            ],
            options={
                'db_table': 'user_role',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Watermeter',
            fields=[
                ('id', models.AutoField(db_column='Id', primary_key=True, serialize=False)),
                ('numbersth', models.CharField(blank=True, db_column='NumberSth', max_length=30, null=True)),
                ('buildingname', models.CharField(blank=True, db_column='BuildingName', max_length=128, null=True)),
                ('roomname', models.CharField(blank=True, db_column='RoomName', max_length=128, null=True)),
                ('nodeaddr', models.CharField(blank=True, db_column='NodeAddr', max_length=30, null=True)),
                ('wateraddr', models.CharField(blank=True, db_column='WaterAddr', max_length=30, null=True)),
                ('rvalue', models.CharField(blank=True, db_column='RValue', max_length=30, null=True)),
                ('fvalue', models.CharField(blank=True, db_column='FValue', max_length=30, null=True)),
                ('metertype', models.CharField(blank=True, db_column='MeterType', max_length=30, null=True)),
                ('meterstate', models.CharField(blank=True, db_column='MeterState', max_length=30, null=True)),
                ('commstate', models.CharField(blank=True, db_column='CommState', max_length=30, null=True)),
                ('rtime', models.CharField(blank=True, db_column='RTime', max_length=30, null=True)),
                ('lastrvalue', models.CharField(blank=True, db_column='LastRValue', max_length=30, null=True)),
                ('lastrtime', models.CharField(blank=True, db_column='LastRTime', max_length=30, null=True)),
                ('dosage', models.CharField(blank=True, db_column='Dosage', max_length=30, null=True)),
                ('islargecalibermeter', models.IntegerField(blank=True, db_column='IsLargeCaliberMeter', null=True)),
                ('communityid', models.IntegerField(blank=True, db_column='CommunityId', null=True)),
                ('metabinding', models.CharField(blank=True, db_column='MetaBinding', max_length=20, null=True)),
                ('commaddrbig', models.CharField(blank=True, db_column='CommAddrBig', max_length=30, null=True)),
                ('metercontrol', models.IntegerField(blank=True, db_column='MeterControl', null=True)),
                ('valvestate', models.IntegerField(blank=True, db_column='ValveState', null=True)),
                ('usertype', models.CharField(blank=True, db_column='UserType', max_length=30, null=True)),
                ('username', models.CharField(blank=True, db_column='UserName', max_length=30, null=True)),
                ('usertel', models.CharField(blank=True, db_column='UserTel', max_length=30, null=True)),
                ('serialnumber', models.CharField(blank=True, db_column='SerialNumber', max_length=30, null=True)),
                ('model', models.CharField(blank=True, db_column='Model', max_length=30, null=True)),
                ('dn', models.CharField(blank=True, db_column='Dn', max_length=30, null=True)),
                ('material', models.CharField(blank=True, db_column='Material', max_length=30, null=True)),
                ('manufacturer', models.CharField(blank=True, db_column='Manufacturer', max_length=30, null=True)),
                ('installationsite', models.CharField(blank=True, db_column='InstallationSite', max_length=30, null=True)),
                ('madedate', models.CharField(blank=True, db_column='MadeDate', max_length=30, null=True)),
                ('lastwritedate', models.CharField(blank=True, db_column='LastWriteDate', max_length=30, null=True)),
                ('lastwritevalue', models.CharField(blank=True, db_column='LastWriteValue', max_length=30, null=True)),
                ('meterv', models.CharField(blank=True, db_column='MeterV', max_length=30, null=True)),
                ('pntno', models.CharField(blank=True, db_column='PntNo', max_length=30, null=True)),
                ('signlen', models.CharField(blank=True, db_column='SignLen', max_length=30, null=True)),
                ('temperature', models.CharField(blank=True, db_column='Temperature', max_length=30, null=True)),
                ('reportperiod', models.CharField(blank=True, db_column='ReportPeriod', max_length=30, null=True)),
                ('pickperiod', models.CharField(blank=True, db_column='PickPeriod', max_length=30, null=True)),
            ],
            options={
                'db_table': 'watermeter',
                'managed': True,
            },
        ),
    ]
